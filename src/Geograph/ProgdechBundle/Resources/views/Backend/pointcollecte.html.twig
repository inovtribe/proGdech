{% extends 'GeographProgdechBundle:Backend:backend_layout.html.twig' %}
{% set adminMenu = true %}

{% block title %}Détail d'un point de collecte{% endblock %}

{% block content %}
    <h2><small>{{ block('title') }} -</small> {{ pointcollecte.nom }}</h2>
{% for flashMessage in app.session.flashbag.get('success') %}
<div class="alert alert-success">
    {{ flashMessage }}
</div>
{% endfor %}
<div class="row">
    <div class="col-md-9">
        <div id="map" class="h800"></div>
    </div>
    <div class="col-md-3">
        <p>{{ pointcollecte.reference }}</p>
        <p><small>situé</small> {{ pointcollecte.adresse }} <small>à</small> <a href="{{ app.request.basepath }}/admin/commune/{{ pointcollecte.commune.insee }}">{{ pointcollecte.commune.nom }}</a></p>
        <p><small>Créé le </small>date<small> par</small> <a href="{{ app.request.basepath }}/admin/user/{{ pointcollecte.user.id }}">{{ pointcollecte.user.prenom }} {{ pointcollecte.user.nom }}</a></p>
        <p>Nombre d'emplacements : {{ pointcollecte.emplacement }} (points de collectes affectés affecté(s) | points de collecte emplacements vides disponible(s))</p>
        <div id="donut-example" style="height: 250px;"></div>
    </div>
    {% autoescape %}
        <script>
            // Code général de la carte
            {{ include('GeographProgdechBundle:Backend:carte.js.twig') }}
            
            // Code spécifique de la carte
            var markeractif = L.icon({
                iconUrl: '    {{ markeractif.filename|raw }}',
                iconSize:     {{ markeractif.size|raw }},
                iconAnchor:   {{ markeractif.anchor|raw }},
                popupAnchor:  {{ markeractif.popupanchor|raw }}
            });
            var markerinactif = L.icon({
                iconUrl: '    {{ markerinactif.filename|raw }}',
                iconSize:     {{ markerinactif.size|raw }},
                iconAnchor:   {{ markerinactif.anchor|raw }},
                popupAnchor:  {{ markerinactif.popupanchor|raw }}
            });
            
            {% for item in pointscollecte %}
                marker{{ item.id }} = L.marker([{{ item.latitude }}, {{ item.longitude }}], {icon: markerinactif}).bindLabel('{{ item.nom }}').addTo(map);
                marker{{ item.id }}.on('click', marker{{ item.id }}Click);
                function marker{{ item.id }}Click(){
                    document.location.href = "{{ app.request.basepath }}/admin/pointcollecte/{{ item.id }}";
                }
            {% endfor %}
                
            marker = L.marker([{{ pointcollecte.latitude }}, {{ pointcollecte.longitude }}], {icon: markeractif}).addTo(map);
            marker.bindLabel('{{ pointcollecte.nom}}');
            
            // Centrage de la vue sur le point actif
            map.setView([{{ pointcollecte.latitude }}, {{ pointcollecte.longitude }}], 15);
            
            new Morris.Donut({
              element: 'donut-example',
              data: [
                {label: "Ordures Ménagères", value: 4},
                {label: "Tri sélectif", value: 3},
                {label: "Verre", value: 1}
              ],
              colors: ['#606060','#E5FF00','#001EFF']
            });
        </script>
    {% endautoescape %}

</div>

{% endblock %}