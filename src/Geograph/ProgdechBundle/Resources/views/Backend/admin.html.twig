{% extends 'GeographProgdechBundle:Backend:backend_layout.html.twig' %}
{% set adminMenu = true %}

{% block title %}Administration{% endblock %}
{% block content %}
    <h2>{{ block('title') }}</h2>
    {% for flashMessage in app.session.flashbag.get('success') %}
    <div class="alert alert-success">
        {{ flashMessage }}
    </div>
    {% endfor %}
    <article class="col-sm-10 text-right">
        <div id="map" class="h800"></div>
    </article>
    <div class="col-sm-2">
        <div class="panel panel-default">
              <div class="panel-heading">
                <h3 class="panel-title">Commune</h3>
              </div>
              <div id="donneescommune" class="panel-body">
                Survolez une commune
              </div>
        </div> 
    </div>
    {% autoescape 'js'%}
    <script>     
        var geojson = L.geoJson(gestionnairelayer);
        geojson.setStyle({"color": 'red', "weight": 3, "fill" : false, smoothFactor: 1, "fillOpacity": 0.025});

        var topo = L.tileLayer('{{ topolayer.url|raw }}', {attribution: '{{ topolayer.attribution|raw }}'});
        var aerial = L.tileLayer("{{ aeriallayer.url|raw }}", {attribution: "{{ aeriallayer.attribution|raw }}"});
        var baseMaps = {"Carte": topo, "Vue aerienne": aerial};
        var overlayMaps = {};
        var map = L.map('{{ carte.div|raw }}', {layers: [topo, geojson]});
        L.control.layers(baseMaps, overlayMaps).addTo(map);
        
        geojson = L.geoJson(geometriescommunales, {
            style: style,
            onEachFeature: onEachFeature,}).addTo(map); 

        function style(feature) {
            return { 
                weight: 1,
                opacity: 0.5,
                color: 'green',
                dashArray: '3',
                fillOpacity: 0.0
            };
        }
        function highlightFeature(e, feature, layer) {
            var layer = e.target;

            layer.setStyle({
                weight: 2,
                color: 'green',
                dashArray: '',
                fillOpacity: 0.15
            });

            if (!L.Browser.ie && !L.Browser.opera) {
                layer.bringToFront();
            }
        }
        function resetHighlight(e) {
            geojson.resetStyle(e.target);
        }
        function zoomToFeature(e) {
            //map.fitBounds(e.target.getBounds());
            var layer = e.target;
            var inseecommune = layer.feature.properties.INSEE;
            document.location.href = "{{ app.request.basepath }}/admin/commune/" + inseecommune;
        }
        function onEachFeature(feature, layer) {
            layer.bindLabel(
                    '<h4>' + layer.feature.properties.COMMUNE + '</h4>\n\
    <p>X Points de collecte</p><p>X Bacs</p>'
                );
            layer.on({
                mouseover: highlightFeature,
                mouseout: resetHighlight,
                click: zoomToFeature
            });
        }
        
        map.fitBounds(geojson.getBounds()).setMaxBounds(geojson.getBounds());
    </script>
    {% endautoescape %}
{% endblock %}
